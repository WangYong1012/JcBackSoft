<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.brave.feature.mapper.areas.JcAreasMapper" >
  <resultMap id="BaseResultMap" type="com.brave.feature.entity.JcAreas" >
    <id column="JcAreas_id" property="id" jdbcType="INTEGER" />
    <result column="JcAreas_areaid" property="areaid" jdbcType="VARCHAR" />
    <result column="JcAreas_areapid" property="areapid" jdbcType="VARCHAR" />
    <result column="JcAreas_areaname" property="areaname" jdbcType="VARCHAR" />
    <result column="JcAreas_sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    JcAreas.id as JcAreas_id, JcAreas.areaid as JcAreas_areaid, JcAreas.areapid as JcAreas_areapid, 
    JcAreas.areaname as JcAreas_areaname, JcAreas.sort as JcAreas_sort
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.brave.feature.entity.JcAreasExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from jc_areas JcAreas
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jc_areas JcAreas
    where JcAreas.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jc_areas
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.brave.feature.entity.JcAreasExample" >
    delete from jc_areas JcAreas
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.brave.feature.entity.JcAreas" >
    insert into jc_areas (id, areaid, areapid, 
      areaname, sort)
    values (#{id,jdbcType=INTEGER}, #{areaid,jdbcType=VARCHAR}, #{areapid,jdbcType=VARCHAR}, 
      #{areaname,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.brave.feature.entity.JcAreas" >
    insert into jc_areas
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="areaid != null" >
        areaid,
      </if>
      <if test="areapid != null" >
        areapid,
      </if>
      <if test="areaname != null" >
        areaname,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="areaid != null" >
        #{areaid,jdbcType=VARCHAR},
      </if>
      <if test="areapid != null" >
        #{areapid,jdbcType=VARCHAR},
      </if>
      <if test="areaname != null" >
        #{areaname,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.brave.feature.entity.JcAreasExample" resultType="java.lang.Integer" >
    select count(*) from jc_areas JcAreas
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jc_areas JcAreas
    <set >
      <if test="record.id != null" >
        JcAreas.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.areaid != null" >
        JcAreas.areaid = #{record.areaid,jdbcType=VARCHAR},
      </if>
      <if test="record.areapid != null" >
        JcAreas.areapid = #{record.areapid,jdbcType=VARCHAR},
      </if>
      <if test="record.areaname != null" >
        JcAreas.areaname = #{record.areaname,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        JcAreas.sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jc_areas JcAreas
    set JcAreas.id = #{record.id,jdbcType=INTEGER},
      JcAreas.areaid = #{record.areaid,jdbcType=VARCHAR},
      JcAreas.areapid = #{record.areapid,jdbcType=VARCHAR},
      JcAreas.areaname = #{record.areaname,jdbcType=VARCHAR},
      JcAreas.sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.brave.feature.entity.JcAreas" >
    update jc_areas
    <set >
      <if test="areaid != null" >
        areaid = #{areaid,jdbcType=VARCHAR},
      </if>
      <if test="areapid != null" >
        areapid = #{areapid,jdbcType=VARCHAR},
      </if>
      <if test="areaname != null" >
        areaname = #{areaname,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.brave.feature.entity.JcAreas" >
    update jc_areas
    set areaid = #{areaid,jdbcType=VARCHAR},
      areapid = #{areapid,jdbcType=VARCHAR},
      areaname = #{areaname,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCityByProvinceId" parameterType="string" resultType="string">
    select GROUP_CONCAT(areaname) city from jc_areas where areapid = #{areaPid}
  </select>
</mapper>